// node_modules/phaser3-rex-plugins/plugins/utils/object/Clear.js
var Clear = function(obj) {
  if (typeof obj !== "object" || obj === null) {
    return obj;
  }
  if (Array.isArray(obj)) {
    obj.length = 0;
  } else {
    for (var key in obj) {
      delete obj[key];
    }
  }
  return obj;
};
var Clear_default = Clear;

// node_modules/phaser3-rex-plugins/plugins/utils/object/Clone.js
var Clone = function(obj, out) {
  var objIsArray = Array.isArray(obj);
  if (out === void 0) {
    out = objIsArray ? [] : {};
  } else {
    Clear_default(out);
  }
  if (objIsArray) {
    out.length = obj.length;
    for (var i = 0, cnt = obj.length; i < cnt; i++) {
      out[i] = obj[i];
    }
  } else {
    for (var key in obj) {
      out[key] = obj[key];
    }
  }
  return out;
};
var Clone_default = Clone;

// node_modules/phaser3-rex-plugins/plugins/utils/system/CheckP3Version.js
var MinVersion = 60;
var IsChecked = false;
var CheckP3Version = function(minVersion) {
  if (IsChecked) {
    return;
  }
  if (minVersion === void 0) {
    minVersion = MinVersion;
  }
  var version = Phaser.VERSION.split(".");
  var mainVersion = parseInt(version[0]);
  if (mainVersion === 3) {
    var currentVersion = parseInt(version[1]);
    if (currentVersion < minVersion) {
      console.error(`Minimum supported version : ${mainVersion}.${currentVersion}`);
    }
  } else {
    console.error(`Can't supported version : ${mainVersion}`);
  }
  IsChecked = true;
};
var CheckP3Version_default = CheckP3Version;

export {
  CheckP3Version_default,
  Clear_default,
  Clone_default
};
//# sourceMappingURL=chunk-HBRUMY4U.js.map
