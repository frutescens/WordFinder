var v=Object.defineProperty;var l=(o,t)=>v(o,"name",{value:t,configurable:!0});l(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))u(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&u(s)}).observe(document,{childList:!0,subtree:!0});function a(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}l(a,"getFetchOpts");function u(e){if(e.ep)return;e.ep=!0;const r=a(e);fetch(e.href,r)}l(u,"processPreload")},"polyfill")();const E="modulepreload",P=l(function(o,t){return new URL(o,t).href},"assetsURL"),y={},w=l(function(t,a,u){let e=Promise.resolve();if(a&&a.length>0){const s=document.getElementsByTagName("link"),n=document.querySelector("meta[property=csp-nonce]"),h=(n==null?void 0:n.nonce)||(n==null?void 0:n.getAttribute("nonce"));e=Promise.allSettled(a.map(i=>{if(i=P(i,u),i in y)return;y[i]=!0;const f=i.endsWith(".css"),g=f?'[rel="stylesheet"]':"";if(!!u)for(let d=s.length-1;d>=0;d--){const m=s[d];if(m.href===i&&(!f||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${i}"]${g}`))return;const c=document.createElement("link");if(c.rel=f?"stylesheet":E,f||(c.as="script"),c.crossOrigin="",c.href=i,h&&c.setAttribute("nonce",h),document.head.appendChild(c),f)return new Promise((d,m)=>{c.addEventListener("load",d),c.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${i}`)))})}))}function r(s){const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=s,window.dispatchEvent(n),!n.defaultPrevented)throw s}return l(r,"handlePreloadError"),e.then(s=>{for(const n of s||[])n.status==="rejected"&&r(n.reason);return t().catch(r)})},"preload"),p=l(async o=>{try{const{game:t}=await w(async()=>{const{game:a}=await import("./game-B6ijM-9z.js");return{game:a}},[],import.meta.url);t.sound.pauseOnBlur=!1,o&&(t.manifest=o)}catch(t){console.error("Game failed to launch:",t)}},"startGame");fetch("/manifest.json").then(o=>o.json()).then(o=>{p(o.manifest)}).catch(()=>{p()});
